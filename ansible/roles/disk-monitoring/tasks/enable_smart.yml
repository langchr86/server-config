- ansible.builtin.set_fact:
    device_options: "-d {{ device.smart_type|default('auto') }} {{ device.path }}"

- name: "Check S.M.A.R.T. info of: '{{ device.path }}'"
  become: true
  ansible.builtin.command: "smartctl -i {{ device_options }}"
  register: smart_info
  changed_when: false
  failed_when: false

- ansible.builtin.set_fact:
    smart_available: false

- name: "Check if S.M.A.R.T. is available on: '{{ device.path }}'"
  ansible.builtin.set_fact:
    smart_available: true
  when: smart_info.stdout is regex('SMART support.*Available')

- ansible.builtin.fail:
    msg: >
      This role is only usable on devices that support S.M.A.R.T..
      Check with: 'sudo smartctl -i {{ device_options }}'.
      Maybe you did specify the wrong device type: '{{ device.smart_type|default('auto') }}'?
  when: not smart_available

- ansible.builtin.set_fact:
    smart_enabled: false

- name: "Check if S.M.A.R.T. is enabled on: '{{ device.path }}'"
  ansible.builtin.set_fact:

    smart_enabled: true
  when: smart_available and smart_info.stdout is regex('SMART support.*Enabled')

- name: "Enable S.M.A.R.T. on: {{ device.path }}"
  become: true
  ansible.builtin.command: "smartctl -s on {{ device_options }}"
  when: smart_available and not smart_enabled
