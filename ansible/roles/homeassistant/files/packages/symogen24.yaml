# Fronius Symo Gen24 Plus Integrations

sensor:
  - platform: integration
    source: sensor.battery_power_charging
    name: "Total Battery Energy Charged"
    unique_id: "symogen24_total_battery_energy_charged"
    unit_prefix: k
    method: left
  - platform: integration
    source: sensor.battery_power_discharging
    name: "Total Battery Energy Discharged"
    unique_id: "symogen24_total_battery_energy_discharged"
    unit_prefix: k
    method: left
  - platform: integration
    source: sensor.power_photovoltaics
    name: "Total Photovoltaics Energy"
    unique_id: "symogen24_total_photovoltaics_energy"
    unit_prefix: k
    method: left
  - platform: integration
    source: sensor.power_photovoltaics_string_1
    name: "Total Photovoltaics String 1 Energy"
    unique_id: "symogen24_total_photovoltaics_string_1_energy"
    unit_prefix: k
    method: left
  - platform: integration
    source: sensor.power_photovoltaics_string_2
    name: "Total Photovoltaics String 2 Energy "
    unique_id: "symogen24_total_photovoltaics_string_2_energy"
    unit_prefix: k
    method: left
  - platform: integration
    source: sensor.solarnet_power_load_others
    name: "Total SolarNet Energy others"
    unique_id: "symogen24_total_solarnet_energy_others"
    unit_prefix: k
    method: left

template:
  - sensor:
      - name: "Battery Power Charging"
        unique_id: "symogen24_battery_power_charging"
        unit_of_measurement: W
        device_class: power
        state_class: measurement
        state: "{{ max(0, 0 - states('sensor.solarnet_power_battery') | float(default=0)) }}"
      - name: "Battery Power Discharging"
        unique_id: "symogen24_battery_power_discharging"
        unit_of_measurement: W
        device_class: power
        state_class: measurement
        state: "{{ max(0, states('sensor.solarnet_power_battery') | float(default=0)) }}"
      - name: "Power Photovoltaics"
        unique_id: "symogen24_power_photovoltaics"
        unit_of_measurement: W
        device_class: power
        state_class: measurement
        state: "{{ states('sensor.solarnet_power_photovoltaics') | float(default=0) }}"
      - name: "Power Photovoltaics String 1"
        unique_id: "symogen24_power_photovoltaics_string_1"
        unit_of_measurement: W
        device_class: power
        state_class: measurement
        state: "{{ states('sensor.lang_pv_symo24_current_dc') | float(default=0) * states('sensor.lang_pv_symo24_voltage_dc') | float(default=0) }}"
      - name: "Power Photovoltaics String 2"
        unique_id: "symogen24_power_photovoltaics_string_2"
        unit_of_measurement: W
        device_class: power
        state_class: measurement
        state: "{{ states('sensor.lang_pv_symo24_current_dc_2') | float(default=0) * states('sensor.lang_pv_symo24_voltage_dc_2') | float(default=0) }}"
      - name: "SolarNet Power load inverted"
        unique_id: "symogen24_solarnet_power_load_inverted"
        state: "{{ max(0, 0 - states('sensor.solarnet_power_load') | float(default=0)) }}"
        unit_of_measurement: W
        device_class: power
        state_class: measurement
      - name: "SolarNet Power grid consume"
        unique_id: "symogen24_solarnet_power_grid_consume"
        state: "{{ max(0, states('sensor.solarnet_power_grid') | float(default=0)) }}"
        unit_of_measurement: W
        device_class: power
        state_class: measurement
      - name: "SolarNet Power grid feed"
        unique_id: "symogen24_solarnet_power_grid_feed"
        state: "{{ max(0, 0 - states('sensor.solarnet_power_grid') | float(default=0)) }}"
        unit_of_measurement: W
        device_class: power
        state_class: measurement
      - name: "SolarNet Power load others"
        unique_id: "symogen24_solarnet_power_load_others"
        state: "{{ max(0, (states('sensor.solarnet_power_load_inverted') | float(default=0))
                - (states('sensor.wpl17ics_real_power_all_modes') | float(default=0))
                - (states('sensor.comfoair_power_usage') | float(default=0))
                - (states('sensor.outlet_rack_power') | float(default=0))
                - (states('sensor.outlet_buro_power') | float(default=0))
                - (states('sensor.outlet_tv_wohnen_power') | float(default=0))
                - (states('sensor.motorrad_power') | float(default=0))
                - (states('sensor.boiler_channel_a_power') | float(default=0))
                - (states('sensor.tumbler_leistung') | float(default=0))
                - (states('sensor.waschmaschine_leistung') | float(default=0))
                - (states('sensor.entharter_power') | float(default=0))
                - (states('sensor.regenwasser_power') | float(default=0))
                - (states('sensor.wattpilot_charging_energy') | float(default=0))
                - (states('sensor.geschirrspuler_leistung') | float(default=0))
                - (states('sensor.entfeuchter_leistung') | float(default=0)) ) | int(default=0) }}"
        unit_of_measurement: W
        device_class: power
        state_class: measurement
      - name: "SolarNet Power self usage"
        unique_id: "symogen24_solarnet_power_self_usage"
        # 0 < SelfUsage < TotalPV
        state: "{{ max(0,
                  min(states('sensor.solarnet_power_photovoltaics') | float(default=0),
                    (states('sensor.solarnet_power_load_inverted') | float(default=0))
                    - (states('sensor.solarnet_power_battery') | float(default=0))
                    - (states('sensor.solarnet_power_grid_consume') | float(default=0))
                  )
                ) }}"
        unit_of_measurement: W
        device_class: power
        state_class: measurement

  - binary_sensor:
    - name: warmepumpe_combined
      unique_id: warmepumpe_combined
      icon: mdi:heat-pump
      state: "{{ states('binary_sensor.wpl17ics_betriebsstatus_verdichter_aktiv') }}"
      attributes:
        power: "{{ states('sensor.wpl17ics_real_power_all_modes') | int(default=0) }} W"
        sgready: " SG-Ready {{ states('sensor.wpl17ics_sg_ready_betriebszustand') | int(default=0) }}"
        mode: "
          {% if states('binary_sensor.wpl17ics_betriebsstatus_heizung_aktiv') | bool(default=false ) %}
            Heizen
          {% elif states('binary_sensor.wpl17ics_betriebsstatus_warmwasser_aktiv') | bool(default=false ) %}
            Warmwasser
          {% elif states('binary_sensor.wpl17ics_betriebsstatus_kuhlbetrieb_aktiv') | bool(default=false ) %}
            KÃ¼hlen
          {% endif %}
        "
    - name: comfoair_combined
      unique_id: comfoair_combined
      icon: mdi:air-conditioner
      state: "{{ states('fan.comfoair') }}"
      attributes:
        power: "{{ states('sensor.comfoair_power_usage') | int(default=0) }} W"
        percentage: "{{ state_attr('fan.comfoair','percentage') }} %"
        bypass: "{{ states('sensor.comfoair_bypass_state') }} %"
    - name: entfeuchter_combined
      unique_id: entfeuchter_combined
      icon: mdi:air-humidifier
      state: "{{ states('binary_sensor.entfeuchter_active') }}"
      attributes:
        power: "{{ states('sensor.entfeuchter_leistung') | int(default=0) }} W"
    - name: tumbler_combined
      unique_id: tumbler_combined
      icon: mdi:tumble-dryer
      state: "{{ states('binary_sensor.tumbler_active') }}"
      attributes:
        power: "{{ states('sensor.tumbler_leistung') | int(default=0) }} W"
    - name: waschmaschine_combined
      unique_id: waschmaschine_combined
      icon: mdi:washing-machine
      state: "{{ states('binary_sensor.waschmaschine_active') }}"
      attributes:
        power: "{{ states('sensor.waschmaschine_leistung') | int(default=0) }} W"
    - name: geschirrspuler_combined
      unique_id: geschirrspuler_combined
      icon: mdi:dishwasher
      state: "{{ states('binary_sensor.geschirrspuler_active') }}"
      attributes:
        power: "{{ states('sensor.geschirrspuler_leistung') | int(default=0) }} W"
    - name: wattpilot_combined
      unique_id: wattpilot_combined
      icon: mdi:ev-station
      state: "{{ states('binary_sensor.wattpilot_active') }}"
      attributes:
        power: "{{ states('sensor.wattpilot_charging_energy') | int(default=0) }} W"
        current: "{{ states('number.wattpilot_charging_power') | int(default=0) }} A"
        mode: "{{ states('select.wattpilot_charging_mode') }}"
        phases: "{{ states('select.wattpilot_phase_switch') }}"
    - name: cupra_born_combined
      unique_id: cupra_born_combined
      icon: mdi:car-electric
      state: "{{ states('binary_sensor.cupra_born_engine_status') }}"
      attributes:
        charge: "{{ states('sensor.cupra_born_state_of_charge') | int(default=0) }} %"
        range: "{{ states('sensor.cupra_born_range_in_kilometers') | int(default=0) }} km"
    - name: tv_wohnen_combined
      unique_id: tv_wohnen_combined
      icon: mdi:youtube-tv
      state: "{{ states('switch.outlet_tv_wohnen') }}"
      attributes:
        power: "{{ states('sensor.outlet_tv_wohnen_power') | int(default=0) }} W"
    - name: motorrad_combined
      unique_id: motorrad_combined
      icon: mdi:motorbike-electric
      state: "{{ states('switch.motorrad') }}"
      attributes:
        power: "{{ states('sensor.motorrad_power') | int(default=0) }} W"
    - name: entharter_combined
      unique_id: entharter_combined
      icon: mdi:waves
      state: "{{ states('binary_sensor.entharter_active') }}"
      attributes:
        power: "{{ states('sensor.entharter_power') | int(default=0) }} W"
    - name: regenwasser_combined
      unique_id: regenwasser_combined
      icon: mdi:weather-pouring
      state: "{{ states('binary_sensor.regenwasser_active') }}"
      attributes:
        power: "{{ states('sensor.regenwasser_power') | int(default=0) }} W"
    - name: boiler_combined
      unique_id: boiler_combined
      icon: mdi:water-boiler
      state: "{{ states('switch.boiler') }}"
      attributes:
        power: "{{ states('sensor.boiler_channel_a_power') | int(default=0) }} W"
