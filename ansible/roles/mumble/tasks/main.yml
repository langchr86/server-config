---

- name: Create app config folder
  become: yes
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ mb_user }}"
    group: "{{ mb_group }}"
    mode: "775"
  with_items:
    - "{{ mb_app_folder }}"

- name: Create config subfolders
  become: yes
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ mb_config_folder }}"
    - "{{ mb_data_folder }}"

- import_tasks: tasks/evaluate_uid.yml
  vars:
    user_name: "{{ mb_cert_user }}"

- import_tasks: tasks/evaluate_gid.yml
  vars:
    group_name: "{{ mb_cert_group }}"

- name: "Copy config file to {{ mb_config_folder }}"
  become: yes
  template:
    src: "files/config.ini"
    dest: "{{ mb_config_folder }}/config.ini"
  register: config

- name: "Create docker compose service. Run 'docker exec -it mumble supw <new_password>' to change the super user password"
  include_role:
    name: docker-compose-service
  vars:
    service_name: "{{ mb_service_name }}"
    force_restart: "{{ config.changed }}"

# we have to create a dict out of a list to be able to use a variable as key
# see: https://docs.ansible.com/ansible/latest/user_guide/playbooks_filters.html#items2dict-filter
- set_fact:
    timer_tags:
      - key: "{{ mb_service_name }}_periodic_restart"
        value:
          timer_command: "/bin/systemctl try-restart docker-compose@{{ mb_service_name }}"
          timer_AccuracySec: 1m
          timer_OnCalendar: "Mon *-*-* 04:00:00"

# see: https://github.com/vlcty/ansible-systemd-timers
- name: "Install periodic restart timer task for {{ mb_service_name }}"
  include_role:
    name: ansible-systemd-timers
    apply:
      become: yes
  vars:
    timers:
      - "{{ timer_tags | items2dict }}"
